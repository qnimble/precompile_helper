name: C/C++ CI

on:
  create:
    tags:
      - '*'
jobs:    
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{env.GITHUB_REF_SLUG}}
          body: "Release ${{env.GITHUB_REF_SLUG}} of qNimble verion of PaulStoffregen's precompile_helper"


  build_release:
    name: Publish for ${{ matrix.os }}-${{matrix.arch}}
    runs-on: ${{ matrix.os }}
    needs: create_release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: precompile_helper
            asset_name: precompile_helper
            arch: amd64
            archive_ext: .tar.bz2
            suffix: -linux-amd64
          - os: ubuntu-latest
            artifact_name: precompile_helper
            asset_name: precompile_helper
            arch: i686
            suffix: -linux-i686
            make_flags: "EXTRA_FLAGS=-m32"
            archive_ext: .tar.bz2
          - os: windows-latest
            artifact_name: precompile_helper
            asset_name: precompile_helper
            arch: i686
            msystem: MINGW32
            suffix: -win32
            archive_ext: .zip
            ext: .exe
          - os: windows-latest
            artifact_name: precompile_helper
            asset_name: precompile_helper
            arch: x86_64
            msystem: MINGW64
            suffix: -win64
            archive_ext: .zip
            ext: .exe
          - os: macos-latest
            artifact_name: precompile_helper
            asset_name: precompile_helper
            arch: amd64
            suffix: -mac
            archive_ext: .tar.bz2


    steps:      
    - uses: actions/checkout@v2
    - name: Inject slug/short variables
      uses: rlespinasse/github-slug-action@v3.x            
    - name: get linux multilib
      if: ${{matrix.os == 'ubuntu-latest'}}
      run: sudo apt-get update; sudo apt-get install gcc-multilib g++-multilib
    - name: get msys2
      uses: msys2/setup-msys2@v2
      if: ${{matrix.os == 'windows-latest'}}
      with:
          msystem: ${{ matrix.msystem }}
          install: git base-devel binutils mingw-w64-${{ matrix.arch }}-toolchain
          release: false
    - name: make (win)
      if: ${{matrix.os == 'windows-latest'}}
      shell: msys2 {0}
      run:  |
            gcc precompile_helper.c -o precompile_helper -DOS_WINDOWS
            mkdir precompile_helper-${{env.GITHUB_REF_SLUG}}
            cp precompile_helper.exe precompile_helper-${{env.GITHUB_REF_SLUG}}/
            zip precompile_helper.zip precompile_helper-${{env.GITHUB_REF_SLUG}}/*
    - name: make (not win)
      if: ${{matrix.os != 'windows-latest'}}
      run: |
           gcc precompile_helper.c -o precompile_helper
           mkdir precompile_helper-${{env.GITHUB_REF_SLUG}}
           cp precompile_helper precompile_helper-${{env.GITHUB_REF_SLUG}}/
           tar -cjf precompile_helper.tar.bz2 precompile_helper-${{env.GITHUB_REF_SLUG}}
    - name: Upload file (Binary)
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ${{matrix.artifact_name}}${{matrix.ext}}
          asset_name: ${{matrix.asset_name}}-${{env.GITHUB_REF_SLUG}}${{matrix.suffix}}${{matrix.ext}}
          asset_content_type: application/octet-stream
    - name: Upload file (Archive)
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ${{matrix.artifact_name}}${{matrix.archive_ext}}
          asset_name: ${{matrix.asset_name}}-${{env.GITHUB_REF_SLUG}}${{matrix.suffix}}${{matrix.archive_ext}}
          asset_content_type: application/octet-stream
